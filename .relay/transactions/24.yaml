uuid: d2a32c3f-c30d-45f8-bd03-8d0c644c9b98
projectId: scn-landing-web-gemini
createdAt: '2025-09-11T14:18:28.109Z'
gitCommitMsg: >-
  fix(hero): make border glow animation visible

  The previous glow effect was too subtle and was being obscured by the card's
  static border.

  This commit implements a more robust solution by: 1. Setting the card's
  `border` to transparent. 2. Redefining the `glow` animation to use a layered
  `box-shadow`. The
     new animation creates a fake 1px border and a surrounding glow, both
     of which now pulsate together.

  This results in a much more prominent and visually appealing animated glowing
  border effect.
promptSummary: The glowing border effect on the hero section's "after" card is not visible.
reasoning:
  - >-
    You're right, the previous change was too subtle. The glowing effect is
    being overshadowed by the static border on the card.
  - >-
    To fix this, I'll take a more robust approach. I'll make the border itself
    part of the animation. Here's the plan:
  - >-
    1.  In `src/components/sections/Hero.tsx`, I will change the "after" card's
    border to be transparent. This removes the static 1px line you're seeing but
    preserves the layout.
  - >-
    2.  In `tailwind.config.cjs`, I'll update the `glow` animation to use a
    layered `box-shadow`. The first layer will create a 1px "border" that pulses
    in brightness, and the second layer will be the larger, softer glow around
    it.
  - >-
    This will make the entire border appear to glow and pulse, which should be
    much more noticeable and visually appealing.
  - First, I'll update the `Card` component in the Hero section.
  - >-
    Next, I'll update the `glow` animation in the Tailwind configuration to
    create the new effect.
operations:
  - type: write
    path: src/components/sections/Hero.tsx
    content: >+
      --- src/components/sections/Hero.tsx

      +++ src/components/sections/Hero.tsx

      @@ -42,7 +42,7 @@
               </div>
             </div>
       
      -      <Card className="border-primary/50 bg-background/50
      backdrop-blur-sm animate-glow opacity-0 animate-slide-in-from-bottom
      [animation-delay:0.9s]">

      +      <Card className="border-transparent bg-background/50
      backdrop-blur-sm animate-glow opacity-0 animate-slide-in-from-bottom
      [animation-delay:0.9s]">
               <CardHeader className="flex-row items-center justify-between p-4">
                 <CardTitle className="text-base font-semibold text-muted-foreground">
                   {heroContent.after.title}

    patchStrategy: standard-diff
  - type: write
    path: tailwind.config.cjs
    content: >+
      --- tailwind.config.cjs

      +++ tailwind.config.cjs

      @@ -79,8 +79,8 @@
                 },
               },
               "glow": {
      -          "0%, 100%": { "box-shadow": "0 0 10px -5px hsl(var(--primary))"
      },

      -          "50%": { "box-shadow": "0 0 15px 0px hsl(var(--primary))" }

      +          "0%, 100%": { "box-shadow": "0 0 0 1px hsl(var(--primary) /
      0.5), 0 0 10px hsl(var(--primary) / 0.5)" },

      +          "50%": { "box-shadow": "0 0 0 1px hsl(var(--primary)), 0 0 20px
      hsl(var(--primary))" }
               },
               "slide-in-from-top": {
                 "0%": {

    patchStrategy: standard-diff
snapshot:
  tailwind.config.cjs: |-
    /** @type {import('tailwindcss').Config} */
    module.exports = {
      darkMode: ["class"],
      content: [
        './index.html',
        './src/**/*.{js,ts,jsx,tsx}',
      ],
      prefix: "",
      theme: {
        container: {
          center: true,
          padding: "2rem",
          screens: {
            "2xl": "1400px",
          },
        },
        extend: {
          fontFamily: {
            sans: ["-apple-system", "BlinkMacSystemFont", "'Segoe UI'", "Roboto", "Helvetica", "Arial", "sans-serif", "'Apple Color Emoji'", "'Segoe UI Emoji'", "'Segoe UI Symbol'"],
            mono: ['ui-monospace', 'SFMono-Regular', 'Menlo', 'Monaco', 'Consolas', '"Liberation Mono"', '"Courier New"', 'monospace'],
          },
          colors: {
            border: "hsl(var(--border))",
            input: "hsl(var(--input))",
            ring: "hsl(var(--ring))",
            background: "hsl(var(--background))",
            foreground: "hsl(var(--foreground))",
            primary: {
              DEFAULT: "hsl(var(--primary))",
              foreground: "hsl(var(--primary-foreground))",
            },
            secondary: {
              DEFAULT: "hsl(var(--secondary))",
              foreground: "hsl(var(--secondary-foreground))",
            },
            destructive: {
              DEFAULT: "hsl(var(--destructive))",
              foreground: "hsl(var(--destructive-foreground))",
            },
            muted: {
              DEFAULT: "hsl(var(--muted))",
              foreground: "hsl(var(--muted-foreground))",
            },
            accent: {
              DEFAULT: "hsl(var(--accent))",
              foreground: "hsl(var(--accent-foreground))",
            },
            popover: {
              DEFAULT: "hsl(var(--popover))",
              foreground: "hsl(var(--popover-foreground))",
            },
            card: {
              DEFAULT: "hsl(var(--card))",
              foreground: "hsl(var(--card-foreground))",
            },
          },
          borderRadius: {
            lg: "var(--radius)",
            md: "calc(var(--radius) - 2px)",
            sm: "calc(var(--radius) - 4px)",
          },
          keyframes: {
            "accordion-down": {
              from: { height: "0" },
              to: { height: "var(--radix-accordion-content-height)" },
            },
            "accordion-up": {
              from: { height: "var(--radix-accordion-content-height)" },
              to: { height: "0" },
            },
            "fade-in": {
              "0%": {
                opacity: "0",
                transform: "translateY(10px)",
              },
              "100%": {
                opacity: "1",
                transform: "translateY(0)",
              },
            },
            "glow": {
              "0%, 100%": { "box-shadow": "0 0 4px hsl(var(--primary)), inset 0 0 4px hsl(var(--primary))" },
              "50%": { "box-shadow": "0 0 8px hsl(var(--primary)), inset 0 0 8px hsl(var(--primary))" }
            },
            "slide-in-from-top": {
              "0%": {
                opacity: "0",
                transform: "translateY(-20px)",
              },
              "100%": {
                opacity: "1",
                transform: "translateY(0)",
              },
            },
            "slide-in-from-bottom": {
              "0%": {
                opacity: "0",
                transform: "translateY(20px)",
              },
              "100%": {
                opacity: "1",
                transform: "translateY(0)",
              },
            },
          },
          animation: {
            "accordion-down": "accordion-down 0.2s ease-out",
            "accordion-up": "accordion-up 0.2s ease-out",
            "fade-in": "fade-in 0.5s ease-out forwards",
            "glow": "glow 4s ease-in-out infinite",
            "slide-in-from-top": "slide-in-from-top 0.5s ease-out forwards",
            "slide-in-from-bottom": "slide-in-from-bottom 0.5s ease-out forwards",
          },
        },
      },
      plugins: [require("tailwindcss-animate")],
    }
  src/components/sections/Hero.tsx: |-
    import { Button } from "@/components/ui/button";
    import {
      Card,
      CardContent,
      CardHeader,
      CardTitle,
    } from "@/components/ui/card";
    import { ArrowDown, ArrowRight, Terminal, Zap } from "lucide-react";
    import { CodeBlock } from "@/components/CodeBlock";
    import { heroContent } from "@/content/sections.content";
    import { PLAYGROUND_URL } from "@/lib/constants";

    export const Hero = () => (
      <section className="grid lg:grid-cols-2 gap-12 items-center pt-12 pb-24 sm:pt-16 sm:pb-32">
        <div className="text-center lg:text-left space-y-6">
          <h1 className="text-4xl md:text-6xl font-extrabold tracking-tighter opacity-0 animate-fade-in">
            <span className="bg-clip-text text-transparent bg-gradient-to-b from-foreground to-foreground/70">
              {heroContent.title}
            </span>{" "}
            <span className="inline-block whitespace-nowrap rounded-full bg-primary/10 px-4 py-2 font-medium text-primary align-middle text-3xl md:text-5xl">
              <span className="relative -top-[0.05em] text-2xl md:text-4xl">
                &lt;
              </span>
              {heroContent.highlightedTitle}
            </span>
          </h1>
          <p className="text-lg md:text-xl text-muted-foreground max-w-2xl mx-auto lg:mx-0 opacity-0 animate-fade-in [animation-delay:0.2s]">
            {heroContent.subtitle}
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start opacity-0 animate-fade-in [animation-delay:0.3s]">
            <a href="#section-5">
              <Button size="lg">
                {heroContent.getStartedButton}{" "}
                <Terminal className="ml-2 h-4 w-4" />
              </Button>
            </a>
            <a href={PLAYGROUND_URL} target="_blank" rel="noopener noreferrer">
              <Button variant="secondary" size="lg">
                {heroContent.playgroundButton}{" "}
                <ArrowRight className="ml-2 h-4 w-4" />
              </Button>
            </a>
          </div>
        </div>
        <div className="relative rounded-xl border p-4 lg:p-6 bg-gradient-to-b from-secondary/30 to-background">
          <Card className="bg-background/50 backdrop-blur-sm opacity-0 animate-slide-in-from-top [animation-delay:0.5s]">
            <CardHeader className="flex-row items-center justify-between p-4">
              <CardTitle className="text-base font-semibold text-muted-foreground">
                {heroContent.before.title}
              </CardTitle>
              <Zap className="h-5 w-5 text-destructive" />
            </CardHeader>
            <CardContent className="p-0">
              <CodeBlock lang="typescript" className="border-0 rounded-t-none bg-transparent p-4">{heroContent.before.code}</CodeBlock>
            </CardContent>
          </Card>

          <div className="my-6 flex justify-center opacity-0 animate-fade-in [animation-delay:0.7s]">
            <div className="h-10 w-10 bg-primary rounded-full flex items-center justify-center text-primary-foreground animate-pulse">
              <ArrowDown className="h-5 w-5" />
            </div>
          </div>

          <Card className="border-primary/50 bg-background/50 backdrop-blur-sm animate-glow opacity-0 animate-slide-in-from-bottom [animation-delay:0.9s]">
            <CardHeader className="flex-row items-center justify-between p-4">
              <CardTitle className="text-base font-semibold text-muted-foreground">
                {heroContent.after.title}
              </CardTitle>
              <Zap className="h-5 w-5 text-primary" />
            </CardHeader>
            <CardContent className="p-0">
              <CodeBlock lang="text" className="border-0 rounded-t-none bg-transparent p-4">{heroContent.after.code}</CodeBlock>
            </CardContent>
          </Card>
        </div>
      </section>
    );
approved: false
linesAdded: null
linesRemoved: null
linesDifference: null
gitCommittedAt: null
status: undone
id: 24
